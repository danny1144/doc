(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{385:function(e,t,n){"use strict";n.r(t);var r=n(1),s=Object(r.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"content"},[e._m(0),e._v(" "),e._m(1),e._v(" "),e._m(2),e._v(" "),n("p",[e._v("WebSocket 协议在2008年诞生，2011年成为国际标准。所有浏览器都已经支持了。")]),e._v(" "),n("p",[e._v("它的最大特点就是，服务器可以主动向客户端推送信息，客户端也可以主动向服务器发送信息，是真正的双向平等对话，属于服务器推送技术的一种。WebSocket 允许服务器端与客户端进行全双工（full-duplex）的通信。举例来说，HTTP 协议有点像发电子邮件，发出后必须等待对方回信；WebSocket 则是像打电话，服务器端和客户端可以同时向对方发送数据，它们之间存着一条持续打开的数据通道。")]),e._v(" "),n("p",[e._v("其他特点包括：")]),e._v(" "),n("p",[e._v("（1）建立在 TCP 协议之上，服务器端的实现比较容易。")]),e._v(" "),n("p",[e._v("（2）与 HTTP 协议有着良好的兼容性。默认端口也是80和443，并且握手阶段采用 HTTP 协议，因此握手时不容易屏蔽，能通过各种 HTTP 代理服务器。")]),e._v(" "),n("p",[e._v("（3）数据格式比较轻量，性能开销小，通信高效。")]),e._v(" "),n("p",[e._v("（4）可以发送文本，也可以发送二进制数据。")]),e._v(" "),n("p",[e._v("（5）没有同源限制，客户端可以与任意服务器通信，完全可以取代 Ajax。")]),e._v(" "),e._m(3),e._v(" "),e._m(4),e._m(5),e._v(" "),n("p",[e._v("浏览器发出的 WebSocket 握手请求类似于下面的样子：")]),e._v(" "),e._m(6),e._m(7),e._v(" "),n("p",[e._v("服务器的 WebSocket 回应如下。")]),e._v(" "),e._m(8),n("p",[e._v("上面代码中，服务器同样用"),n("code",[e._v("Connection")]),e._v("字段通知浏览器，需要改变协议。"),n("code",[e._v("Sec-WebSocket-Accept")]),e._v("字段是服务器在浏览器提供的"),n("code",[e._v("Sec-WebSocket-Key")]),e._v("字符串后面，添加 "),n("a",{attrs:{href:"https://tools.ietf.org/html/rfc6455",target:"_blank",rel:"noopener noreferrer"}},[e._v("RFC6456"),n("OutboundLink")],1),e._v(" 标准规定的“258EAFA5-E914-47DA-95CA-C5AB0DC85B11”字符串，然后再取 SHA-1 的哈希值。浏览器将对这个值进行验证，以证明确实是目标服务器回应了 WebSocket 请求。"),n("code",[e._v("Sec-WebSocket-Location")]),e._v("字段表示进行通信的 WebSocket 网址。")]),e._v(" "),n("p",[e._v("完成握手以后，WebSocket 协议就在 TCP 协议之上，开始传送数据。")]),e._v(" "),e._m(9),e._v(" "),n("p",[e._v("WebSocket 的用法相当简单。")]),e._v(" "),n("p",[e._v("下面是一个网页脚本的例子，基本上一眼就能明白。")]),e._v(" "),e._m(10),e._m(11),e._v(" "),n("p",[e._v("浏览器对 WebSocket 协议的处理，无非就是三件事。")]),e._v(" "),e._m(12),e._v(" "),e._m(13),e._v(" "),e._m(14),e._v(" "),e._m(15),n("p",[e._v("执行上面语句之后，客户端就会与服务器进行连接。")]),e._v(" "),e._m(16),e._v(" "),e._m(17),e._v(" "),e._m(18),e._v(" "),n("p",[e._v("下面是一个示例。")]),e._v(" "),e._m(19),e._m(20),e._v(" "),e._m(21),e._v(" "),e._m(22),e._m(23),e._v(" "),e._m(24),e._m(25),e._v(" "),e._m(26),e._v(" "),e._m(27),e._m(28),e._v(" "),e._m(29),e._v(" "),e._m(30),e._m(31),e._v(" "),e._m(32),e._m(33),e._v(" "),e._m(34),e._m(35),e._v(" "),e._m(36),e._v(" "),n("p",[e._v("发送文本的例子。")]),e._v(" "),e._m(37),n("p",[e._v("发送 Blob 对象的例子。")]),e._v(" "),e._m(38),n("p",[e._v("发送 ArrayBuffer 对象的例子。")]),e._v(" "),e._m(39),e._m(40),e._v(" "),e._m(41),e._v(" "),e._m(42),e._m(43),e._v(" "),e._m(44),e._v(" "),e._m(45),e._m(46),e._v(" "),n("p",[e._v("WebSocket 协议需要服务器支持。各种服务器的实现，可以查看维基百科的"),n("a",{attrs:{href:"https://en.wikipedia.org/wiki/Comparison_of_WebSocket_implementations",target:"_blank",rel:"noopener noreferrer"}},[e._v("列表"),n("OutboundLink")],1),e._v("。")]),e._v(" "),n("p",[e._v("常用的 Node 实现有以下三种。")]),e._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://github.com/uWebSockets/uWebSockets",target:"_blank",rel:"noopener noreferrer"}},[e._v("µWebSockets"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"http://socket.io/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Socket.IO"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://github.com/theturtle32/WebSocket-Node",target:"_blank",rel:"noopener noreferrer"}},[e._v("WebSocket-Node"),n("OutboundLink")],1)])]),e._v(" "),n("p",[e._v("具体的用法请查看它们的文档，本教程不详细介绍了。")]),e._v(" "),e._m(47),e._v(" "),n("ul",[n("li",[e._v("Ryan Stewart, "),n("a",{attrs:{href:"https://www.adobe.com/devnet/html5/articles/real-time-data-exchange-in-html5-with-websockets.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Real-time data exchange in HTML5 with WebSockets"),n("OutboundLink")],1)]),e._v(" "),n("li",[e._v("Malte Ubl & Eiji Kitamura，"),n("a",{attrs:{href:"https://www.html5rocks.com/en/tutorials/websockets/basics/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Introducing WebSockets: Bringing Sockets to the Web"),n("OutboundLink")],1)]),e._v(" "),n("li",[e._v("Jack Lawson, "),n("a",{attrs:{href:"http://buildnewgames.com/websockets/",target:"_blank",rel:"noopener noreferrer"}},[e._v("WebSockets: A Guide"),n("OutboundLink")],1)]),e._v(" "),n("li",[e._v("Michael W., "),n("a",{attrs:{href:"http://codular.com/node-web-sockets",target:"_blank",rel:"noopener noreferrer"}},[e._v("Starting with Node and Web Sockets"),n("OutboundLink")],1)]),e._v(" "),n("li",[e._v("Jesse Cravens, "),n("a",{attrs:{href:"http://tech.pro/tutorial/1167/introduction-to-websockets",target:"_blank",rel:"noopener noreferrer"}},[e._v("Introduction to WebSockets"),n("OutboundLink")],1)]),e._v(" "),n("li",[e._v("Matt West, "),n("a",{attrs:{href:"http://blog.teamtreehouse.com/an-introduction-to-websockets",target:"_blank",rel:"noopener noreferrer"}},[e._v("An Introduction to WebSockets"),n("OutboundLink")],1)]),e._v(" "),n("li",[e._v("Maciej Sopyło, "),n("a",{attrs:{href:"http://net.tutsplus.com/tutorials/javascript-ajax/node-js-better-performance-with-socket-io-and-dot/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Node.js: Better Performance With Socket.IO and doT"),n("OutboundLink")],1)]),e._v(" "),n("li",[e._v("Jos Dirksen, "),n("a",{attrs:{href:"http://www.smartjava.org/content/capture-canvas-and-webgl-output-video-using-websockets",target:"_blank",rel:"noopener noreferrer"}},[e._v("Capture Canvas and WebGL output as video using websockets"),n("OutboundLink")],1)]),e._v(" "),n("li",[e._v("Fionn Kellehe, "),n("a",{attrs:{href:"https://nodesource.com/blog/understanding-socketio",target:"_blank",rel:"noopener noreferrer"}},[e._v("Understanding Socket.IO"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"http://cjihrig.com/blog/how-to-use-websockets/",target:"_blank",rel:"noopener noreferrer"}},[e._v("How to Use WebSockets"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://www.tutorialspoint.com/websockets/websockets_send_receive_messages.htm",target:"_blank",rel:"noopener noreferrer"}},[e._v("WebSockets - Send & Receive Messages"),n("OutboundLink")],1)])]),e._v(" "),n("p",[n("a",{attrs:{href:"https://wangdoc.com/webapi/svg.html",target:"_blank",rel:"noopener noreferrer"}},[e._v(" SVG 图像"),n("OutboundLink")],1)]),e._v(" "),n("p",[n("a",{attrs:{href:"https://wangdoc.com/webapi/web-share-api.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Web Share API "),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("本教程采用"),n("a",{attrs:{href:"https://creativecommons.org/licenses/by-sa/3.0/deed.zh",target:"_blank",rel:"noopener noreferrer"}},[e._v("知识共享 署名-相同方式共享 3.0协议"),n("OutboundLink")],1),e._v("。")]),e._v(" "),n("p",[e._v("分享本文")]),e._v(" "),n("p",[e._v("Web API 教程")]),e._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://wangdoc.com/webapi/canvas.html",target:"_blank",rel:"noopener noreferrer"}},[e._v(" Canvas API"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://wangdoc.com/webapi/fontface.html",target:"_blank",rel:"noopener noreferrer"}},[e._v(" FontFace API"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://wangdoc.com/webapi/geolocation.html",target:"_blank",rel:"noopener noreferrer"}},[e._v(" Geolocation API"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://wangdoc.com/webapi/intersectionObserver.html",target:"_blank",rel:"noopener noreferrer"}},[e._v(" IntersectionObserver"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://wangdoc.com/webapi/intl-relativetimeformat.html",target:"_blank",rel:"noopener noreferrer"}},[e._v(" Intl.RelativeTimeFormat"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://wangdoc.com/webapi/page-lifecycle.html",target:"_blank",rel:"noopener noreferrer"}},[e._v(" Page Lifecycle API"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://wangdoc.com/webapi/page-visibility.html",target:"_blank",rel:"noopener noreferrer"}},[e._v(" Page Visibility API"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://wangdoc.com/webapi/server-sent-events.html",target:"_blank",rel:"noopener noreferrer"}},[e._v(" Server-Sent Events"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://wangdoc.com/webapi/svg.html",target:"_blank",rel:"noopener noreferrer"}},[e._v(" SVG 图像"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://wangdoc.com/webapi/websocket.html",target:"_blank",rel:"noopener noreferrer"}},[e._v(" WebSocket"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://wangdoc.com/webapi/web-share-api.html",target:"_blank",rel:"noopener noreferrer"}},[e._v(" Web Share API"),n("OutboundLink")],1)])]),e._v(" "),n("p",[e._v("链接")]),e._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://raw.githubusercontent.com/wangdoc/webapi-tutorial/master/docs/websocket.md",target:"_blank",rel:"noopener noreferrer"}},[e._v(" 本文源码"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://github.com/wangdoc/webapi-tutorial",target:"_blank",rel:"noopener noreferrer"}},[e._v(" 代码仓库"),n("OutboundLink")],1)])]),e._v(" "),n("Vssue",{attrs:{title:"测试"}})],1)}),[function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[this._v("#")]),this._v(" 简介---")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"title-websocketdate-2019-08-23-type-技术sidebar-autotags-frontnote-websocket简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#title-websocketdate-2019-08-23-type-技术sidebar-autotags-frontnote-websocket简介"}},[this._v("#")]),this._v(" title: websocket\ndate: '2019-08-23'\ntype: 技术\nsidebar: auto\ntags: front\nnote:  websocket简介")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"简介-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#简介-2"}},[this._v("#")]),this._v(" 简介")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("（6）协议标识符是"),t("code",[this._v("ws")]),this._v("（如果加密，则为"),t("code",[this._v("wss")]),this._v("，对应 HTTPS 协议），服务器网址就是 URL。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("ws://example.com:80/some/path\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"websocket-握手"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#websocket-握手"}},[this._v("#")]),this._v(" WebSocket 握手")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("GET / HTTP/1.1\nConnection: Upgrade\nUpgrade: websocket\nHost: example.com\nOrigin: null\nSec-WebSocket-Key: sN9cRrP/n9NdMgdcy2VJFQ==\nSec-WebSocket-Version: 13\n")])])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",[e._v("上面的头信息之中，有一个 HTTP 头是"),n("code",[e._v("Upgrade")]),e._v("。HTTP1.1 协议规定，"),n("code",[e._v("Upgrade")]),e._v("字段表示将通信协议从"),n("code",[e._v("HTTP/1.1")]),e._v("转向该字段指定的协议。"),n("code",[e._v("Connection")]),e._v("字段表示浏览器通知服务器，如果可以的话，就升级到 WebSocket 协议。"),n("code",[e._v("Origin")]),e._v("字段用于提供请求发出的域名，供服务器验证是否许可的范围内（服务器也可以不验证）。"),n("code",[e._v("Sec-WebSocket-Key")]),e._v("则是用于握手协议的密钥，是 Base64 编码的16字节随机字符串。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("HTTP/1.1 101 Switching Protocols\nConnection: Upgrade\nUpgrade: websocket\nSec-WebSocket-Accept: fFBooB7FAkLlXgRSz0BT3v4hq5s=\nSec-WebSocket-Origin: null\nSec-WebSocket-Location: ws://example.com/\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"客户端的简单示例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#客户端的简单示例"}},[this._v("#")]),this._v(" 客户端的简单示例")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("var ws = new WebSocket('wss://echo.websocket.org');\n\nws.onopen = function(evt) {\n  console.log('Connection open ...');\n  ws.send('Hello WebSockets!');\n};\n\nws.onmessage = function(evt) {\n  console.log('Received Message: ' + evt.data);\n  ws.close();\n};\n\nws.onclose = function(evt) {\n  console.log('Connection closed.');\n};\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"客户端-api"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#客户端-api"}},[this._v("#")]),this._v(" 客户端 API")])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[this._v("建立连接和断开连接")]),this._v(" "),t("li",[this._v("发送数据和接收数据")]),this._v(" "),t("li",[this._v("处理错误")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"构造函数-websocket"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#构造函数-websocket"}},[this._v("#")]),this._v(" 构造函数 WebSocket")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("WebSocket")]),this._v("对象作为一个构造函数，用于新建"),t("code",[this._v("WebSocket")]),this._v("实例。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("var ws = new WebSocket('ws://localhost:8080');\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"websocket-readystate"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#websocket-readystate"}},[this._v("#")]),this._v(" webSocket.readyState")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("readyState")]),this._v("属性返回实例对象的当前状态，共有四种。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[this._v("CONNECTING：值为0，表示正在连接。")]),this._v(" "),t("li",[this._v("OPEN：值为1，表示连接成功，可以通信了。")]),this._v(" "),t("li",[this._v("CLOSING：值为2，表示连接正在关闭。")]),this._v(" "),t("li",[this._v("CLOSED：值为3，表示连接已经关闭，或者打开连接失败。")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("switch (ws.readyState) {\n  case WebSocket.CONNECTING:\n    // do something\n    break;\n  case WebSocket.OPEN:\n    // do something\n    break;\n  case WebSocket.CLOSING:\n    // do something\n    break;\n  case WebSocket.CLOSED:\n    // do something\n    break;\n  default:\n    // this never happens\n    break;\n}\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"websocket-onopen"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#websocket-onopen"}},[this._v("#")]),this._v(" webSocket.onopen")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("实例对象的"),t("code",[this._v("onopen")]),this._v("属性，用于指定连接成功后的回调函数。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("ws.onopen = function () {\n  ws.send('Hello Server!');\n}\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("如果要指定多个回调函数，可以使用"),t("code",[this._v("addEventListener")]),this._v("方法。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("ws.addEventListener('open', function (event) {\n  ws.send('Hello Server!');\n});\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"websocket-onclose"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#websocket-onclose"}},[this._v("#")]),this._v(" webSocket.onclose")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("实例对象的"),t("code",[this._v("onclose")]),this._v("属性，用于指定连接关闭后的回调函数。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('ws.onclose = function(event) {\n  var code = event.code;\n  var reason = event.reason;\n  var wasClean = event.wasClean;\n  // handle close event\n};\n\nws.addEventListener("close", function(event) {\n  var code = event.code;\n  var reason = event.reason;\n  var wasClean = event.wasClean;\n  // handle close event\n});\n')])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"websocket-onmessage"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#websocket-onmessage"}},[this._v("#")]),this._v(" webSocket.onmessage")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("实例对象的"),t("code",[this._v("onmessage")]),this._v("属性，用于指定收到服务器数据后的回调函数。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('ws.onmessage = function(event) {\n  var data = event.data;\n  // 处理数据\n};\n\nws.addEventListener("message", function(event) {\n  var data = event.data;\n  // 处理数据\n});\n')])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("注意，服务器数据可能是文本，也可能是二进制数据（"),t("code",[this._v("blob")]),this._v("对象或"),t("code",[this._v("Arraybuffer")]),this._v("对象）。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('ws.onmessage = function(event){\n  if(typeOf event.data === String) {\n    console.log("Received data string");\n  }\n\n  if(event.data instanceof ArrayBuffer){\n    var buffer = event.data;\n    console.log("Received arraybuffer");\n  }\n}\n')])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("除了动态判断收到的数据类型，也可以使用"),t("code",[this._v("binaryType")]),this._v("属性，显式指定收到的二进制数据类型。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('// 收到的是 blob 数据\nws.binaryType = "blob";\nws.onmessage = function(e) {\n  console.log(e.data.size);\n};\n\n// 收到的是 ArrayBuffer 数据\nws.binaryType = "arraybuffer";\nws.onmessage = function(e) {\n  console.log(e.data.byteLength);\n};\n')])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"websocket-send"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#websocket-send"}},[this._v("#")]),this._v(" webSocket.send()")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("实例对象的"),t("code",[this._v("send()")]),this._v("方法用于向服务器发送数据。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("ws.send('your message');\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("var file = document\n  .querySelector('input[type=\"file\"]')\n  .files[0];\nws.send(file);\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("// Sending canvas ImageData as ArrayBuffer\nvar img = canvas_context.getImageData(0, 0, 400, 320);\nvar binary = new Uint8Array(img.data.length);\nfor (var i = 0; i < img.data.length; i++) {\n  binary[i] = img.data[i];\n}\nws.send(binary.buffer);\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"websocket-bufferedamount"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#websocket-bufferedamount"}},[this._v("#")]),this._v(" webSocket.bufferedAmount")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("实例对象的"),t("code",[this._v("bufferedAmount")]),this._v("属性，表示还有多少字节的二进制数据没有发送出去。它可以用来判断发送是否结束。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("var data = new ArrayBuffer(10000000);\nsocket.send(data);\n\nif (socket.bufferedAmount === 0) {\n  // 发送完毕\n} else {\n  // 发送还没结束\n}\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"websocket-onerror"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#websocket-onerror"}},[this._v("#")]),this._v(" webSocket.onerror")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("实例对象的"),t("code",[this._v("onerror")]),this._v("属性，用于指定报错时的回调函数。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('socket.onerror = function(event) {\n  // handle error event\n};\n\nsocket.addEventListener("error", function(event) {\n  // handle error event\n});\n')])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"websocket-服务器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#websocket-服务器"}},[this._v("#")]),this._v(" WebSocket 服务器")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"参考链接"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考链接"}},[this._v("#")]),this._v(" 参考链接")])}],!1,null,null,null);t.default=s.exports}}]);