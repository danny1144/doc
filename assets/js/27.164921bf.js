(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{382:function(t,a,s){"use strict";s.r(a);var e=s(1),n=Object(e.a)({},(function(){var t=this.$createElement;this._self._c;return this._m(0)}),[function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"content"},[s("h2",{attrs:{id:"fluentd"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#fluentd"}},[t._v("#")]),t._v(" fluentd")]),t._v(" "),s("p",[t._v("官网提供了一个直接安装的脚本，使用如下命令即可完成安装，首先要保证自己的网络通畅：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('curl -L https://toolbelt.treasuredata.com/sh/install-redhat-td-agent3.sh | sh\necho "=============================="\necho " td-agent Installation Script "\necho "=============================="\necho "This script requires superuser access to install rpm packages."\necho "You will be prompted for your password by sudo."\n\n# clear any previous sudo permission\nsudo -k\n\n# run inside sudo\nsudo sh <<SCRIPT\n\n  # add GPG key\n  rpm --import https://packages.treasuredata.com/GPG-KEY-td-agent\n\n  # add treasure data repository to yum\n  cat >/etc/yum.repos.d/td.repo <<\'EOF\';\n[treasuredata]\nname=TreasureData\nbaseurl=http://packages.treasuredata.com/3/redhat/\\$releasever/\\$basearch\ngpgcheck=1\ngpgkey=https://packages.treasuredata.com/GPG-KEY-td-agent\nEOF\n\n  # update your sources\n  yum check-update\n\n  # install the toolbelt\n  yes | yum install -y td-agent\n\nSCRIPT\n\n# message\necho ""\necho "Installation completed. Happy Logging!"\necho ""\n')])])]),s("p",[t._v("从这个脚本可以看出：添加了一下yum源，使用yum直接安装，比较简单。\n离线安装\n大多数产品化时，基本上是使用离线安装的，我们下载rpm包进行安装。\n下载所有rpm包\n找一台网络通畅的CentOS机器，首先添加yum源")]),t._v(" "),s("h3",{attrs:{id:"add-gpg-key"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#add-gpg-key"}},[t._v("#")]),t._v(" add GPG key")]),t._v(" "),s("p",[t._v("rpm --import https://packages.treasuredata.com/GPG-KEY-td-agent")]),t._v(" "),s("h3",{attrs:{id:"add-treasure-data-repository-to-yum"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#add-treasure-data-repository-to-yum"}},[t._v("#")]),t._v(" add treasure data repository to yum")]),t._v(" "),s("p",[t._v("cat >/etc/yum.repos.d/td.repo <<'EOF';\n[treasuredata]\nname=TreasureData\nbaseurl=http://packages.treasuredata.com/3/redhat/$releasever/$basearch\ngpgcheck=1\ngpgkey=https://packages.treasuredata.com/GPG-KEY-td-agent\nEOF")]),t._v(" "),s("h3",{attrs:{id:"update-your-sources"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#update-your-sources"}},[t._v("#")]),t._v(" update your sources")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("yum check-update\n\n使用下面命令下载所有rpm包\nmkdir /home/fluentd_rpms\nyum -y install td-agent --downloadonly --downloaddir=/home/fluentd_rpms\n有了rpm包，找到依赖顺序，使用rpm -ivh *.rpm进行安装\n")])])]),s("h3",{attrs:{id:"启动服务"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#启动服务"}},[t._v("#")]),t._v(" 启动服务")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("查看是否安装：rpm -qa|grep td-agent\n使用命令启动：systemctl start td-agent\n默认配置文件路径：/etc/td-agent/td-agent.conf\n默认日志文件路径：/var/log/td-agent/td-agent.log\n可以从这个日志文件中查看td-agent服务运行日志/报错信息\n")])])]),s("h3",{attrs:{id:"名词解释"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#名词解释"}},[t._v("#")]),t._v(" 名词解释")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('source：指定数据源\nmatch：指定输出地址\nfilter：指定了一个事件处理过程\nsystem：用来设置系统的配置\nlabel：为output和filter分组\n@include：使用它可以在配置文件里面包含其他的配置文件\n插件：fluentd采集发送日志时要使用插件，一些插件是内置的，要使用非内置的插件需\ndocker run -dit -p 8080:80 -v ./nginx.conf:/etc/nginx --log-driver=fluentd --log-opt fluentd-address=10.192.30.192:24224 --log-opt tag="docker.test.nginx" nginx\n')])])]),s("h3",{attrs:{id:"举个栗子"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#举个栗子"}},[t._v("#")]),t._v(" 举个栗子")]),t._v(" "),s("p",[t._v("fluentd/source：source可定义日志来源。每一个来源配置必须包含类型（type），比如tcp数据输入，或者json类型输入。")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("source")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  @type forward\n  port 5140\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("source")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("source")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n   @type beats\n   metadata_as_tag\n   "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("parse")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n      @type json\n   "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("parse")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("source")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("fluentd/filter：filter就是过滤规则，当source.tag复合filter的规则时，就执行这个filter进行过滤行为。我们将数据格式化为json，并过滤出key的名字为log的数据。")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("filter")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("nginx.**")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  @type parser\n  format json\n  key_name log\n  reserve_data true\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("filter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n")])])]),s("p",[t._v("fluentd/match：match是fluentd收到数据后的处理， @type elasticsearch表示把数据输入到elasticsearch上面。")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("match")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("nginx.backend")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n   @type elasticsearch\n   host elasticsearch\n   port 9200\n   logstash_format true\n   logstash_prefix nginx\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("match")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("match")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("docker.**")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n   @type elasticsearch\n   host elasticsearch\n   port 9200\n   logstash_format true\n   logstash_prefix app\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("match")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("h3",{attrs:{id:"创建完成如图所示："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建完成如图所示："}},[t._v("#")]),t._v(" 创建完成如图所示：")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("source")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n   @type http\n   port 8888\n   bind 0.0.0.0\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("source")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("match")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("td3.**")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n   type stdout\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("match")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("blockquote",[s("p",[t._v('curl http://10.192.30.192:8888/td3 -d \'json={"hi":"abc"}\'')])]),t._v(" "),s("blockquote",[s("p",[t._v("curl '10.192.30.192:9200/_cat/indices?v'")])]),t._v(" "),s("h3",{attrs:{id:"查看fluentd索引中的数据"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看fluentd索引中的数据"}},[t._v("#")]),t._v(" 查看fluentd索引中的数据")]),t._v(" "),s("p",[t._v("curl -XGET '10.192.30.192:9200/fluentd/_search?pretty'")]),t._v(" "),s("p",[t._v('curl -X POST -d \'json={"foo":"bar"}\' http://localhost:8081/app.log')])])}],!1,null,null,null);a.default=n.exports}}]);